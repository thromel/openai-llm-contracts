[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "openai-llm-contracts"
version = "0.1.0"
description = "LLM Design by Contract Framework - A reliability layer for OpenAI and other LLM APIs"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "openai>=1.0.0",
    "pydantic>=2.0.0",
    "httpx>=0.25.0",
    "typing-extensions>=4.0.0",
    "python-dateutil>=2.8.0",
    "tqdm>=4.65.0",
    "rich>=13.0.0",
    "click>=8.1.0",
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "setuptools>=61.0",
]

[project.optional-dependencies]
langchain = ["langchain>=0.1.0"]
guardrails = ["guardrails-ai>=0.2.0"]
telemetry = ["opentelemetry-api>=1.20.0", "opentelemetry-sdk>=1.20.0"]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "ruff>=0.0.260",
]

[project.urls]
Homepage = "https://github.com/yourusername/openai-llm-contracts"
Documentation = "https://github.com/yourusername/openai-llm-contracts/blob/main/README.md"
Repository = "https://github.com/yourusername/openai-llm-contracts"
Issues = "https://github.com/yourusername/openai-llm-contracts/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
llm_contracts = ["py.typed"]

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.8"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.ruff]
line-length = 100
select = ["E", "F", "I", "N", "UP", "B", "C4", "SIM", "RUF"]